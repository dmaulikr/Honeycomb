<map id="honey::Task" name="honey::Task">
<area shape="rect" id="node2" href="$classhoney_1_1_shared_obj.html" title="Reference&#45;counted object for intrusive shared pointers." alt="" coords="289,5,418,33"/>
<area shape="rect" id="node3" href="$structhoney_1_1mt_1_1_no_copy.html" title="Inherit to declare that class is not copyable." alt="" coords="38,5,173,33"/>
<area shape="rect" id="node4" href="$structhoney_1_1thread_1_1_pool_1_1_task.html" title="All tasks must inherit from this class. std::function is not used here to avoid the operator() virtua..." alt="" coords="285,57,422,101"/>
<area shape="rect" id="node5" href="$structhoney_1_1mt_1_1_funcptr_base.html" title="Inherit to enable non&#45;virtual functor calling." alt="" coords="24,65,187,93"/>
<area shape="rect" id="node6" href="$classhoney_1_1_mutex.html" title="A thread lock where the lock is acquired by suspending thread execution until it becomes available..." alt="" coords="303,125,404,153"/>
<area shape="rect" id="node8" href="$classhoney_1_1_dep_node.html" title="honey::DepNode\&lt; Task * \&gt;" alt="" coords="263,177,444,205"/>
<area shape="rect" id="node9" href="$classhoney_1_1_task_sched.html" title="Task scheduler, serializes and parallelizes task execution, given a dependency graph of tasks and a p..." alt="" coords="288,229,418,257"/>
<area shape="rect" id="node10" href="$classhoney_1_1_dep_graph_1_1_vertex.html" title="A vertex is initially associated with one key and acts like a multi&#45;map, storing all nodes and graph ..." alt="" coords="256,281,451,325"/>
<area shape="rect" id="node11" href="$classhoney_1_1_weak_ptr.html" title="honey::WeakPtr\&lt; honey\l::Task \&gt;" alt="" coords="271,349,435,393"/>
</map>
