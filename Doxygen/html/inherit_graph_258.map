<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$classhoney_1_1_future_common.html" title="honey::FutureCommon\l\&lt; Future\&lt; R \&gt;, R \&gt;" alt="" coords="282,5,440,49"/>
<area shape="rect" id="node2" href="$classhoney_1_1_future.html" title="Unique future, guarantees sole access to a future function result." alt="" coords="549,425,685,453"/>
<area shape="rect" id="node3" href="$classhoney_1_1_future_common.html" title="honey::FutureCommon\l\&lt; SharedFuture\&lt; R \&gt;, R \&gt;" alt="" coords="274,973,449,1017"/>
<area shape="rect" id="node4" href="$classhoney_1_1_shared_future.html" title="Shared future, allows multiple access to a future function result." alt="" coords="528,909,707,937"/>
<area shape="rect" id="node5" href="$classhoney_1_1_allocator_object.html" title="Objects may inherit from this class to use a custom allocator for new/delete ops." alt="" coords="284,3633,439,3677"/>
<area shape="rect" id="node6" href="$classhoney_1_1_listener.html" title="Holds a slot that can receive signals." alt="" coords="561,3593,674,3621"/>
<area shape="rect" id="node8" href="$classhoney_1_1_slot_base.html" title="Multicast receiver." alt="" coords="558,3645,677,3673"/>
<area shape="rect" id="node7" href="$classhoney_1_1_listener_queue.html" title="Listener that holds queued slot for delayed processing of signals." alt="" coords="781,3593,934,3621"/>
<area shape="rect" id="node9" href="$structhoney_1_1lockfree_1_1_mem_config.html" title="Configuration interface for memory manager. Inherit this class and override types and static members..." alt="" coords="6,89,194,117"/>
<area shape="rect" id="node10" href="$classhoney_1_1lockfree_1_1_list.html" title="Lock&#45;free doubly&#45;linked list." alt="" coords="278,73,445,133"/>
<area shape="rect" id="node11" href="$structhoney_1_1mt_1_1_funcptr_base.html" title="Inherit to enable non&#45;virtual functor calling." alt="" coords="19,3573,181,3601"/>
<area shape="rect" id="node12" href="$structhoney_1_1thread_1_1_pool_1_1_task.html" title="All tasks must inherit from this class. std::function is not used here to avoid the operator() virtua..." alt="" coords="293,3565,430,3609"/>
<area shape="rect" id="node13" href="$classhoney_1_1_task.html" title="Base class of Task_, can be added to scheduler. Instances must be created through class Task_..." alt="" coords="571,3541,664,3569"/>
<area shape="rect" id="node14" href="$classhoney_1_1_task__.html" title="Holds a functor and dependency information, enqueue in a scheduler to run the task." alt="" coords="777,3541,938,3569"/>
<area shape="rect" id="node15" href="$structhoney_1_1mt_1_1_no_copy.html" title="Inherit to declare that class is not copyable." alt="" coords="32,1903,168,1931"/>
<area shape="rect" id="node16" href="$classhoney_1_1_alge__.html" title="Algebra." alt="" coords="287,2673,436,2701"/>
<area shape="rect" id="node17" href="$classhoney_1_1concur_1_1_deque.html" title="Concurrent double&#45;lock deque. Contention is split between the front and back locks. Automatically expands storage size as needed." alt="" coords="285,2725,437,2769"/>
<area shape="rect" id="node18" href="$classhoney_1_1_condition.html" title="Method to synchronize threads. Condition variables eliminate the need for repeated polling to check t..." alt="" coords="301,3701,422,3729"/>
<area shape="rect" id="node20" href="$classhoney_1_1_future_base.html" title="Base class for Future types." alt="" coords="294,837,428,865"/>
<area shape="rect" id="node21" href="$classhoney_1_1_geom__.html" title="Geometry math." alt="" coords="282,2997,441,3025"/>
<area shape="rect" id="node22" href="$classhoney_1_1_interp__.html" title="Interpolation math." alt="" coords="283,3049,440,3077"/>
<area shape="rect" id="node23" href="$classhoney_1_1lockfree_1_1_mem.html" title="Lock&#45;free memory manager for concurrent algorithms." alt="" coords="287,3101,436,3145"/>
<area shape="rect" id="node24" href="$classhoney_1_1_mem_pool.html" title="Memory pool." alt="" coords="301,3169,422,3197"/>
<area shape="rect" id="node25" href="$classhoney_1_1_packaged_task_3_01_r_07_param_8_8_8_08_4.html" title="honey::PackagedTask\l\&lt; R(Param...)\&gt;" alt="" coords="285,3221,437,3265"/>
<area shape="rect" id="node26" href="$classhoney_1_1_promise.html" title="Container to hold a delayed function result." alt="" coords="288,3289,435,3317"/>
<area shape="rect" id="node27" href="$classhoney_1_1_real_base.html" title="Base class for real number operations." alt="" coords="271,3341,452,3369"/>
<area shape="rect" id="node28" href="$classhoney_1_1_scope_guard__.html" title="Run a function at scope exit. See ScopeGuard() to create." alt="" coords="272,3393,451,3421"/>
<area shape="rect" id="node29" href="$classhoney_1_1_shared_lock.html" title="A scoped lock that references a shared mutex. Does a shared read lock on construction and unlocks on ..." alt="" coords="289,3445,433,3489"/>
<area shape="rect" id="node30" href="$classhoney_1_1_shared_obj.html" title="Reference&#45;counted object for intrusive shared pointers." alt="" coords="297,3513,426,3541"/>
<area shape="rect" id="node72" href="$classhoney_1_1_thread.html" title="Thread class." alt="" coords="308,157,415,185"/>
<area shape="rect" id="node73" href="$structhoney_1_1thread_1_1_interrupt_enable.html" title="Enable / disable interrupts in the current thread&#39;s scope." alt="" coords="281,209,441,253"/>
<area shape="rect" id="node74" href="$classhoney_1_1_transfer_lock.html" title="Scoped transfer of mutex ownership between two locks." alt="" coords="285,277,438,321"/>
<area shape="rect" id="node75" href="$classhoney_1_1_unique_lock.html" title="A scoped lock that references any lockable. Locks on construction and unlocks on destruction." alt="" coords="290,345,433,389"/>
<area shape="rect" id="node76" href="$classhoney_1_1_unique_ptr.html" title="Pointer to a unique, non&#45;shared, object. Finalizer (deletes object by default) is run upon destructio..." alt="" coords="288,413,434,457"/>
<area shape="rect" id="node77" href="$structhoney_1_1_unordered_map.html" title="Convenient method to get an unordered map type with custom allocator." alt="" coords="284,481,438,525"/>
<area shape="rect" id="node78" href="$structhoney_1_1_unordered_multi_map.html" title="Convenient method to get an unordered multi&#45;map type with custom allocator." alt="" coords="270,549,452,593"/>
<area shape="rect" id="node79" href="$structhoney_1_1_unordered_set.html" title="Convenient method to get an unordered set type with custom allocator." alt="" coords="287,617,435,661"/>
<area shape="rect" id="node80" href="$classhoney_1_1lockfree_1_1_mem.html" title="honey::lockfree::Mem\l\&lt; honey::lockfree::List \&gt;" alt="" coords="280,685,443,729"/>
<area shape="rect" id="node81" href="$classhoney_1_1_real_base.html" title="honey::RealBase\&lt; double \&gt;" alt="" coords="268,1605,454,1633"/>
<area shape="rect" id="node83" href="$classhoney_1_1_real_base.html" title="honey::RealBase\&lt; float \&gt;" alt="" coords="276,1501,447,1529"/>
<area shape="rect" id="node85" href="$classhoney_1_1_real_base.html" title="honey::RealBase\&lt; float128 \&gt;" alt="" coords="265,1553,458,1581"/>
<area shape="rect" id="node87" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; Block,\l honey::finalize\&lt; Block,\l Alloc \&gt; \&gt;" alt="" coords="275,753,447,813"/>
<area shape="rect" id="node88" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; Data,\l honey::finalize\&lt; Data,\l Alloc \&gt; \&gt;" alt="" coords="277,889,445,949"/>
<area shape="rect" id="node89" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; honey\l::ConditionLock \&gt;" alt="" coords="275,1041,447,1085"/>
<area shape="rect" id="node90" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; honey\l::SlotBase \&gt;" alt="" coords="275,1109,447,1153"/>
<area shape="rect" id="node91" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; honey\l::SpinLock \&gt;" alt="" coords="275,1177,447,1221"/>
<area shape="rect" id="node92" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; honey\l::String \&gt;" alt="" coords="275,1245,447,1289"/>
<area shape="rect" id="node93" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; std\l::string \&gt;" alt="" coords="285,1313,438,1357"/>
<area shape="rect" id="node94" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; Vec\l\&lt; dim, Real \&gt;[]\&gt;" alt="" coords="282,1381,440,1425"/>
<area shape="rect" id="node95" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; Worker \&gt;" alt="" coords="266,1449,456,1477"/>
<area shape="rect" id="node96" href="$structhoney_1_1_unordered_map.html" title="honey::UnorderedMap\l\&lt; Id, Component *, SmallAllocator \&gt;" alt="" coords="245,1709,478,1753"/>
<area shape="rect" id="node97" href="$structhoney_1_1_unordered_map.html" title="honey::UnorderedMap\l\&lt; Id, PropertyBase::\lPtr, SmallAllocator \&gt;" alt="" coords="284,1777,438,1837"/>
<area shape="rect" id="node98" href="$structhoney_1_1_unordered_map.html" title="honey::UnorderedMap\l\&lt; Id, Slot, SmallAllocator \&gt;" alt="" coords="272,1861,451,1905"/>
<area shape="rect" id="node99" href="$structhoney_1_1_unordered_map.html" title="honey::UnorderedMap\l\&lt; Id, SlotIndex, SmallAllocator \&gt;" alt="" coords="256,1929,467,1973"/>
<area shape="rect" id="node100" href="$structhoney_1_1_unordered_map.html" title="honey::UnorderedMap\l\&lt; Key, DepType, SmallAllocator \&gt;" alt="" coords="251,1997,471,2041"/>
<area shape="rect" id="node101" href="$structhoney_1_1_unordered_map.html" title="honey::UnorderedMap\l\&lt; Key, Vertex *, SmallAllocator \&gt;" alt="" coords="255,2065,468,2109"/>
<area shape="rect" id="node102" href="$structhoney_1_1_unordered_map.html" title="honey::UnorderedMap\l\&lt; MapKey, MapVal, SmallAllocator \&gt;" alt="" coords="243,2133,480,2177"/>
<area shape="rect" id="node103" href="$structhoney_1_1_unordered_map.html" title="honey::UnorderedMap\l\&lt; Vertex *, int, SmallAllocator \&gt;" alt="" coords="259,2201,464,2245"/>
<area shape="rect" id="node104" href="$structhoney_1_1_unordered_map.html" title="honey::UnorderedMap\l\&lt; Vertex *, Vertex *,\l SmallAllocator \&gt;" alt="" coords="284,2269,438,2329"/>
<area shape="rect" id="node105" href="$structhoney_1_1_unordered_map.html" title="honey::UnorderedMap\l\&lt; Vertex *, VertexSet,\l SmallAllocator \&gt;" alt="" coords="284,2353,438,2413"/>
<area shape="rect" id="node106" href="$structhoney_1_1_unordered_multi_map.html" title="honey::UnorderedMultiMap\l\&lt; const void *, Listener\l::ConstPtr, SmallAllocator \&gt;" alt="" coords="269,2437,453,2497"/>
<area shape="rect" id="node107" href="$structhoney_1_1_unordered_multi_map.html" title="honey::UnorderedMultiMap\l\&lt; Key, TreeNode *, SmallAllocator \&gt;" alt="" coords="244,2521,478,2565"/>
<area shape="rect" id="node108" href="$structhoney_1_1_unordered_multi_map.html" title="honey::UnorderedMultiMap\l\&lt; SlotBase *, SlotList\l::iterator, SmallAllocator \&gt;" alt="" coords="270,2589,452,2649"/>
<area shape="rect" id="node109" href="$structhoney_1_1_unordered_set.html" title="honey::UnorderedSet\l\&lt; DepNode *, SmallAllocator \&gt;" alt="" coords="260,2793,462,2837"/>
<area shape="rect" id="node110" href="$structhoney_1_1_unordered_set.html" title="honey::UnorderedSet\l\&lt; Key, SmallAllocator \&gt;" alt="" coords="282,2861,441,2905"/>
<area shape="rect" id="node111" href="$structhoney_1_1_unordered_set.html" title="honey::UnorderedSet\l\&lt; Vertex *, SmallAllocator \&gt;" alt="" coords="270,2929,453,2973"/>
<area shape="rect" id="node19" href="$classhoney_1_1_condition_lock.html" title="Lock that is bound to a single condition. This is the common usage case of condition variables..." alt="" coords="543,3701,692,3729"/>
<area shape="rect" id="node31" href="$classhoney_1_1_exception.html" title="Base exception class. Exceptions inherited from this class provide debug info and can be thrown polym..." alt="" coords="556,3087,679,3115"/>
<area shape="rect" id="node40" href="$classhoney_1_1_object.html" title="Base class for objects." alt="" coords="566,3437,669,3465"/>
<area shape="rect" id="node32" href="$structhoney_1_1debug_1_1_assertion_failure.html" title="Thrown on debug assert() failure." alt="" coords="754,2849,960,2877"/>
<area shape="rect" id="node33" href="$structhoney_1_1_enum_exception.html" title="honey::EnumException" alt="" coords="778,2901,937,2929"/>
<area shape="rect" id="node34" href="$structhoney_1_1future_1_1_already_satisfied.html" title="honey::future::AlreadySatisfied" alt="" coords="756,3005,959,3033"/>
<area shape="rect" id="node35" href="$structhoney_1_1future_1_1_broken.html" title="Exceptions." alt="" coords="783,3057,932,3085"/>
<area shape="rect" id="node36" href="$structhoney_1_1future_1_1_future_already_retrieved.html" title="honey::future::FutureAlready\lRetrieved" alt="" coords="762,3109,952,3153"/>
<area shape="rect" id="node37" href="$structhoney_1_1future_1_1_no_state.html" title="honey::future::NoState" alt="" coords="780,3177,935,3205"/>
<area shape="rect" id="node38" href="$structhoney_1_1thread_1_1_interrupted.html" title="Interrupted exception." alt="" coords="770,3229,945,3257"/>
<area shape="rect" id="node39" href="$structhoney_1_1_variant_error.html" title="honey::VariantError" alt="" coords="789,3281,925,3309"/>
<area shape="rect" id="node41" href="$classhoney_1_1_com_object.html" title="Component object. Object that consists of a collection of components." alt="" coords="791,3385,923,3413"/>
<area shape="rect" id="node43" href="$classhoney_1_1_property_base.html" title="Base class for all properties." alt="" coords="784,3333,930,3361"/>
<area shape="rect" id="node46" href="$classhoney_1_1_property_object.html" title="Object that contains properties." alt="" coords="780,3437,934,3465"/>
<area shape="rect" id="node71" href="$classhoney_1_1_scene.html" title="Provides high&#45;level scene control." alt="" coords="806,3489,909,3517"/>
<area shape="rect" id="node42" href="$classhoney_1_1_scene_object.html" title="Consists of SceneComponent objects." alt="" coords="1019,3385,1160,3413"/>
<area shape="rect" id="node44" href="$classhoney_1_1_property.html" title="Generic property." alt="" coords="1016,3333,1162,3361"/>
<area shape="rect" id="node45" href="$classhoney_1_1_property_3_01vector_3_01_t_01_4_01_4.html" title="Generic vector property." alt="" coords="1008,3105,1171,3149"/>
<area shape="rect" id="node47" href="$classhoney_1_1_component.html" title="Base class for components. Components can only be attached to one ComObject at a time." alt="" coords="1022,3437,1156,3465"/>
<area shape="rect" id="node48" href="$classhoney_1_1_scene_component.html" title="Scene component. Component that can be added to a scene object." alt="" coords="1249,3437,1421,3465"/>
<area shape="rect" id="node49" href="$classhoney_1_1_cull_vol_base.html" title="Cull volume base class." alt="" coords="1514,3411,1651,3439"/>
<area shape="rect" id="node53" href="$classhoney_1_1_light.html" title="Base class for lights." alt="" coords="1536,3463,1630,3491"/>
<area shape="rect" id="node57" href="$classhoney_1_1_nsp_tree_space_1_1_data.html" title="honey::NspTreeSpace\l\&lt; NspTree \&gt;::Data" alt="" coords="1506,3239,1659,3283"/>
<area shape="rect" id="node58" href="$classhoney_1_1_scene_space.html" title="Base class for space components." alt="" coords="1512,3515,1653,3543"/>
<area shape="rect" id="node67" href="$classhoney_1_1_tm.html" title="Transform component." alt="" coords="1541,3567,1625,3595"/>
<area shape="rect" id="node68" href="$classhoney_1_1_tree.html" title="Tree component." alt="" coords="1537,3621,1629,3649"/>
<area shape="rect" id="node69" href="$classhoney_1_1_tree_id_map.html" title="Provides a fast way to retrieve objects in a tree by instance id." alt="" coords="1518,3307,1647,3335"/>
<area shape="rect" id="node70" href="$classhoney_1_1_tree_id_map_1_1_elem.html" title="Element that tracks its Id in the nearest TreeIdMap ancestor." alt="" coords="1499,3359,1666,3387"/>
<area shape="rect" id="node50" href="$classhoney_1_1_cull_vol.html" title="honey::CullVol\&lt; Box \&gt;" alt="" coords="1722,3359,1875,3387"/>
<area shape="rect" id="node52" href="$classhoney_1_1_cull_vol.html" title="Generic volume for culling." alt="" coords="1715,3411,1883,3439"/>
<area shape="rect" id="node51" href="$classhoney_1_1_cull_box_gen.html" title="Generated box for culling." alt="" coords="1940,3359,2076,3387"/>
<area shape="rect" id="node54" href="$classhoney_1_1_light_dir.html" title="Directional light (ex. sunlight)" alt="" coords="1743,3515,1854,3543"/>
<area shape="rect" id="node55" href="$classhoney_1_1_light_omni.html" title="Omni directional (spherical) light." alt="" coords="1736,3463,1862,3491"/>
<area shape="rect" id="node56" href="$classhoney_1_1_light_spot.html" title="Spot light." alt="" coords="1947,3451,2069,3479"/>
<area shape="rect" id="node59" href="$classhoney_1_1_tree_space.html" title="Space that is ordered by a hierarchy of bounding volumes." alt="" coords="1734,3579,1864,3607"/>
<area shape="rect" id="node60" href="$classhoney_1_1_nsp_tree_space.html" title="Space divided by N&#45;dimensional spatial partitioning tree." alt="" coords="1931,3571,2085,3615"/>
<area shape="rect" id="node61" href="$classhoney_1_1_nsp_tree_space.html" title="honey::NspTreeSpace\l\&lt; BspTree \&gt;" alt="" coords="1931,3639,2085,3683"/>
<area shape="rect" id="node63" href="$classhoney_1_1_nsp_tree_space.html" title="honey::NspTreeSpace\l\&lt; OctTree \&gt;" alt="" coords="1931,3707,2085,3751"/>
<area shape="rect" id="node65" href="$classhoney_1_1_nsp_tree_space.html" title="honey::NspTreeSpace\l\&lt; QuadTree \&gt;" alt="" coords="1931,3503,2085,3547"/>
<area shape="rect" id="node62" href="$classhoney_1_1_bsp_tree_space.html" title="Space from a BspTree." alt="" coords="2138,3647,2291,3675"/>
<area shape="rect" id="node64" href="$classhoney_1_1_oct_tree_space.html" title="Space from a OctTree." alt="" coords="2139,3715,2290,3743"/>
<area shape="rect" id="node66" href="$classhoney_1_1_quad_tree_space.html" title="Space from a QuadTree." alt="" coords="2133,3511,2296,3539"/>
<area shape="rect" id="node82" href="$classhoney_1_1_double__.html" title="Defines 64&#45;bit floating point operations and constants." alt="" coords="560,1605,675,1633"/>
<area shape="rect" id="node84" href="$classhoney_1_1_float__.html" title="Defines floating point operations and constants." alt="" coords="566,1501,668,1529"/>
<area shape="rect" id="node86" href="$classhoney_1_1_quad__.html" title="Defines 128&#45;bit floating point operations and constants." alt="" coords="565,1553,670,1581"/>
<area shape="rect" id="node112" href="$classhoney_1_1_transform__.html" title="A 3D linear transform from TRS components (translation, rotation, and scale/skew)" alt="" coords="1264,3557,1405,3601"/>
<area shape="rect" id="node116" href="$classhoney_1_1_mutex.html" title="A thread lock where the lock is acquired by suspending thread execution until it becomes available..." alt="" coords="311,3753,412,3781"/>
<area shape="rect" id="node117" href="$classhoney_1_1_timed_mutex.html" title="A mutex that has a timed try&#45;lock." alt="" coords="548,3753,686,3781"/>
<area shape="rect" id="node119" title="STL class." alt="" coords="310,1657,413,1685"/>
<area shape="rect" id="node120" title="STL class." alt="" coords="801,2953,914,2981"/>
<area shape="rect" id="node121" href="$classhoney_1_1_tree_node.html" title="honey::TreeNode\&lt; SceneObject * \&gt;" alt="" coords="1219,3625,1451,3653"/>
</map>
